/**
 * generated by Xtext 2.9.1
 */
package fmautorepair.kconfig.impl;

import fmautorepair.kconfig.Config;
import fmautorepair.kconfig.KconfigExpr;
import fmautorepair.kconfig.KconfigPackage;
import fmautorepair.kconfig.Range;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Range</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fmautorepair.kconfig.impl.RangeImpl#getIfrom <em>Ifrom</em>}</li>
 *   <li>{@link fmautorepair.kconfig.impl.RangeImpl#getIconfrom <em>Iconfrom</em>}</li>
 *   <li>{@link fmautorepair.kconfig.impl.RangeImpl#getIto <em>Ito</em>}</li>
 *   <li>{@link fmautorepair.kconfig.impl.RangeImpl#getIconfto <em>Iconfto</em>}</li>
 *   <li>{@link fmautorepair.kconfig.impl.RangeImpl#getHfrom <em>Hfrom</em>}</li>
 *   <li>{@link fmautorepair.kconfig.impl.RangeImpl#getHto <em>Hto</em>}</li>
 *   <li>{@link fmautorepair.kconfig.impl.RangeImpl#getKconfigExpr <em>Kconfig Expr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RangeImpl extends MinimalEObjectImpl.Container implements Range
{
  /**
   * The default value of the '{@link #getIfrom() <em>Ifrom</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfrom()
   * @generated
   * @ordered
   */
  protected static final String IFROM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIfrom() <em>Ifrom</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfrom()
   * @generated
   * @ordered
   */
  protected String ifrom = IFROM_EDEFAULT;

  /**
   * The cached value of the '{@link #getIconfrom() <em>Iconfrom</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIconfrom()
   * @generated
   * @ordered
   */
  protected Config iconfrom;

  /**
   * The default value of the '{@link #getIto() <em>Ito</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIto()
   * @generated
   * @ordered
   */
  protected static final String ITO_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getIto() <em>Ito</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIto()
   * @generated
   * @ordered
   */
  protected String ito = ITO_EDEFAULT;

  /**
   * The cached value of the '{@link #getIconfto() <em>Iconfto</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIconfto()
   * @generated
   * @ordered
   */
  protected Config iconfto;

  /**
   * The default value of the '{@link #getHfrom() <em>Hfrom</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHfrom()
   * @generated
   * @ordered
   */
  protected static final String HFROM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHfrom() <em>Hfrom</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHfrom()
   * @generated
   * @ordered
   */
  protected String hfrom = HFROM_EDEFAULT;

  /**
   * The default value of the '{@link #getHto() <em>Hto</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHto()
   * @generated
   * @ordered
   */
  protected static final String HTO_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHto() <em>Hto</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHto()
   * @generated
   * @ordered
   */
  protected String hto = HTO_EDEFAULT;

  /**
   * The cached value of the '{@link #getKconfigExpr() <em>Kconfig Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKconfigExpr()
   * @generated
   * @ordered
   */
  protected KconfigExpr kconfigExpr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RangeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KconfigPackage.Literals.RANGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIfrom()
  {
    return ifrom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIfrom(String newIfrom)
  {
    String oldIfrom = ifrom;
    ifrom = newIfrom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KconfigPackage.RANGE__IFROM, oldIfrom, ifrom));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Config getIconfrom()
  {
    if (iconfrom != null && iconfrom.eIsProxy())
    {
      InternalEObject oldIconfrom = (InternalEObject)iconfrom;
      iconfrom = (Config)eResolveProxy(oldIconfrom);
      if (iconfrom != oldIconfrom)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, KconfigPackage.RANGE__ICONFROM, oldIconfrom, iconfrom));
      }
    }
    return iconfrom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Config basicGetIconfrom()
  {
    return iconfrom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIconfrom(Config newIconfrom)
  {
    Config oldIconfrom = iconfrom;
    iconfrom = newIconfrom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KconfigPackage.RANGE__ICONFROM, oldIconfrom, iconfrom));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getIto()
  {
    return ito;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIto(String newIto)
  {
    String oldIto = ito;
    ito = newIto;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KconfigPackage.RANGE__ITO, oldIto, ito));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Config getIconfto()
  {
    if (iconfto != null && iconfto.eIsProxy())
    {
      InternalEObject oldIconfto = (InternalEObject)iconfto;
      iconfto = (Config)eResolveProxy(oldIconfto);
      if (iconfto != oldIconfto)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, KconfigPackage.RANGE__ICONFTO, oldIconfto, iconfto));
      }
    }
    return iconfto;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Config basicGetIconfto()
  {
    return iconfto;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIconfto(Config newIconfto)
  {
    Config oldIconfto = iconfto;
    iconfto = newIconfto;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KconfigPackage.RANGE__ICONFTO, oldIconfto, iconfto));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getHfrom()
  {
    return hfrom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHfrom(String newHfrom)
  {
    String oldHfrom = hfrom;
    hfrom = newHfrom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KconfigPackage.RANGE__HFROM, oldHfrom, hfrom));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getHto()
  {
    return hto;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHto(String newHto)
  {
    String oldHto = hto;
    hto = newHto;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KconfigPackage.RANGE__HTO, oldHto, hto));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public KconfigExpr getKconfigExpr()
  {
    return kconfigExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetKconfigExpr(KconfigExpr newKconfigExpr, NotificationChain msgs)
  {
    KconfigExpr oldKconfigExpr = kconfigExpr;
    kconfigExpr = newKconfigExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KconfigPackage.RANGE__KCONFIG_EXPR, oldKconfigExpr, newKconfigExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setKconfigExpr(KconfigExpr newKconfigExpr)
  {
    if (newKconfigExpr != kconfigExpr)
    {
      NotificationChain msgs = null;
      if (kconfigExpr != null)
        msgs = ((InternalEObject)kconfigExpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KconfigPackage.RANGE__KCONFIG_EXPR, null, msgs);
      if (newKconfigExpr != null)
        msgs = ((InternalEObject)newKconfigExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KconfigPackage.RANGE__KCONFIG_EXPR, null, msgs);
      msgs = basicSetKconfigExpr(newKconfigExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KconfigPackage.RANGE__KCONFIG_EXPR, newKconfigExpr, newKconfigExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KconfigPackage.RANGE__KCONFIG_EXPR:
        return basicSetKconfigExpr(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KconfigPackage.RANGE__IFROM:
        return getIfrom();
      case KconfigPackage.RANGE__ICONFROM:
        if (resolve) return getIconfrom();
        return basicGetIconfrom();
      case KconfigPackage.RANGE__ITO:
        return getIto();
      case KconfigPackage.RANGE__ICONFTO:
        if (resolve) return getIconfto();
        return basicGetIconfto();
      case KconfigPackage.RANGE__HFROM:
        return getHfrom();
      case KconfigPackage.RANGE__HTO:
        return getHto();
      case KconfigPackage.RANGE__KCONFIG_EXPR:
        return getKconfigExpr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KconfigPackage.RANGE__IFROM:
        setIfrom((String)newValue);
        return;
      case KconfigPackage.RANGE__ICONFROM:
        setIconfrom((Config)newValue);
        return;
      case KconfigPackage.RANGE__ITO:
        setIto((String)newValue);
        return;
      case KconfigPackage.RANGE__ICONFTO:
        setIconfto((Config)newValue);
        return;
      case KconfigPackage.RANGE__HFROM:
        setHfrom((String)newValue);
        return;
      case KconfigPackage.RANGE__HTO:
        setHto((String)newValue);
        return;
      case KconfigPackage.RANGE__KCONFIG_EXPR:
        setKconfigExpr((KconfigExpr)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KconfigPackage.RANGE__IFROM:
        setIfrom(IFROM_EDEFAULT);
        return;
      case KconfigPackage.RANGE__ICONFROM:
        setIconfrom((Config)null);
        return;
      case KconfigPackage.RANGE__ITO:
        setIto(ITO_EDEFAULT);
        return;
      case KconfigPackage.RANGE__ICONFTO:
        setIconfto((Config)null);
        return;
      case KconfigPackage.RANGE__HFROM:
        setHfrom(HFROM_EDEFAULT);
        return;
      case KconfigPackage.RANGE__HTO:
        setHto(HTO_EDEFAULT);
        return;
      case KconfigPackage.RANGE__KCONFIG_EXPR:
        setKconfigExpr((KconfigExpr)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KconfigPackage.RANGE__IFROM:
        return IFROM_EDEFAULT == null ? ifrom != null : !IFROM_EDEFAULT.equals(ifrom);
      case KconfigPackage.RANGE__ICONFROM:
        return iconfrom != null;
      case KconfigPackage.RANGE__ITO:
        return ITO_EDEFAULT == null ? ito != null : !ITO_EDEFAULT.equals(ito);
      case KconfigPackage.RANGE__ICONFTO:
        return iconfto != null;
      case KconfigPackage.RANGE__HFROM:
        return HFROM_EDEFAULT == null ? hfrom != null : !HFROM_EDEFAULT.equals(hfrom);
      case KconfigPackage.RANGE__HTO:
        return HTO_EDEFAULT == null ? hto != null : !HTO_EDEFAULT.equals(hto);
      case KconfigPackage.RANGE__KCONFIG_EXPR:
        return kconfigExpr != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (ifrom: ");
    result.append(ifrom);
    result.append(", ito: ");
    result.append(ito);
    result.append(", hfrom: ");
    result.append(hfrom);
    result.append(", hto: ");
    result.append(hto);
    result.append(')');
    return result.toString();
  }

} //RangeImpl
