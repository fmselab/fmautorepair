/*
 * generated by Xtext 2.9.1
 */
grammar InternalKconfig;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fmautorepair.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fmautorepair.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fmautorepair.services.KconfigGrammarAccess;

}
@parser::members {
	private KconfigGrammarAccess grammarAccess;

	public void setGrammarAccess(KconfigGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getAlternatives()); }
		(rule__Model__Alternatives)*
		{ after(grammarAccess.getModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChoice
entryRuleChoice
:
{ before(grammarAccess.getChoiceRule()); }
	 ruleChoice
{ after(grammarAccess.getChoiceRule()); } 
	 EOF 
;

// Rule Choice
ruleChoice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChoiceAccess().getGroup()); }
		(rule__Choice__Group__0)
		{ after(grammarAccess.getChoiceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfig
entryRuleConfig
:
{ before(grammarAccess.getConfigRule()); }
	 ruleConfig
{ after(grammarAccess.getConfigRule()); } 
	 EOF 
;

// Rule Config
ruleConfig 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigAccess().getGroup()); }
		(rule__Config__Group__0)
		{ after(grammarAccess.getConfigAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDependency
entryRuleDependency
:
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDependencyAccess().getGroup()); }
		(rule__Dependency__Group__0)
		{ after(grammarAccess.getDependencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getGroup()); }
		(rule__Select__Group__0)
		{ after(grammarAccess.getSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefault
entryRuleDefault
:
{ before(grammarAccess.getDefaultRule()); }
	 ruleDefault
{ after(grammarAccess.getDefaultRule()); } 
	 EOF 
;

// Rule Default
ruleDefault 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefaultAccess().getGroup()); }
		(rule__Default__Group__0)
		{ after(grammarAccess.getDefaultAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrompt
entryRulePrompt
:
{ before(grammarAccess.getPromptRule()); }
	 rulePrompt
{ after(grammarAccess.getPromptRule()); } 
	 EOF 
;

// Rule Prompt
rulePrompt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPromptAccess().getGroup()); }
		(rule__Prompt__Group__0)
		{ after(grammarAccess.getPromptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRange
entryRuleRange
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeAccess().getGroup()); }
		(rule__Range__Group__0)
		{ after(grammarAccess.getRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getGroup()); }
		(rule__Expr__Group__0)
		{ after(grammarAccess.getExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNeqLiteral
entryRuleNeqLiteral
:
{ before(grammarAccess.getNeqLiteralRule()); }
	 ruleNeqLiteral
{ after(grammarAccess.getNeqLiteralRule()); } 
	 EOF 
;

// Rule NeqLiteral
ruleNeqLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNeqLiteralAccess().getGroup()); }
		(rule__NeqLiteral__Group__0)
		{ after(grammarAccess.getNeqLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSecondaryLiteral
entryRuleSecondaryLiteral
:
{ before(grammarAccess.getSecondaryLiteralRule()); }
	 ruleSecondaryLiteral
{ after(grammarAccess.getSecondaryLiteralRule()); } 
	 EOF 
;

// Rule SecondaryLiteral
ruleSecondaryLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSecondaryLiteralAccess().getAndLiteralParserRuleCall()); }
		ruleAndLiteral
		{ after(grammarAccess.getSecondaryLiteralAccess().getAndLiteralParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndLiteral
entryRuleAndLiteral
:
{ before(grammarAccess.getAndLiteralRule()); }
	 ruleAndLiteral
{ after(grammarAccess.getAndLiteralRule()); } 
	 EOF 
;

// Rule AndLiteral
ruleAndLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndLiteralAccess().getGroup()); }
		(rule__AndLiteral__Group__0)
		{ after(grammarAccess.getAndLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrLiteral
entryRuleOrLiteral
:
{ before(grammarAccess.getOrLiteralRule()); }
	 ruleOrLiteral
{ after(grammarAccess.getOrLiteralRule()); } 
	 EOF 
;

// Rule OrLiteral
ruleOrLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrLiteralAccess().getGroup()); }
		(rule__OrLiteral__Group__0)
		{ after(grammarAccess.getOrLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryLiteral
entryRulePrimaryLiteral
:
{ before(grammarAccess.getPrimaryLiteralRule()); }
	 rulePrimaryLiteral
{ after(grammarAccess.getPrimaryLiteralRule()); } 
	 EOF 
;

// Rule PrimaryLiteral
rulePrimaryLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryLiteralAccess().getAlternatives()); }
		(rule__PrimaryLiteral__Alternatives)
		{ after(grammarAccess.getPrimaryLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfigLiteral
entryRuleConfigLiteral
:
{ before(grammarAccess.getConfigLiteralRule()); }
	 ruleConfigLiteral
{ after(grammarAccess.getConfigLiteralRule()); } 
	 EOF 
;

// Rule ConfigLiteral
ruleConfigLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigLiteralAccess().getAlternatives()); }
		(rule__ConfigLiteral__Alternatives)
		{ after(grammarAccess.getConfigLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSIGNED_INT
entryRuleSIGNED_INT
:
{ before(grammarAccess.getSIGNED_INTRule()); }
	 ruleSIGNED_INT
{ after(grammarAccess.getSIGNED_INTRule()); } 
	 EOF 
;

// Rule SIGNED_INT
ruleSIGNED_INT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIGNED_INTAccess().getGroup()); }
		(rule__SIGNED_INT__Group__0)
		{ after(grammarAccess.getSIGNED_INTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getChoicesAssignment_0()); }
		(rule__Model__ChoicesAssignment_0)
		{ after(grammarAccess.getModelAccess().getChoicesAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getSourcesAssignment_1()); }
		(rule__Model__SourcesAssignment_1)
		{ after(grammarAccess.getModelAccess().getSourcesAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getConfigsAssignment_2()); }
		(rule__Model__ConfigsAssignment_2)
		{ after(grammarAccess.getModelAccess().getConfigsAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getGroup_0()); }
		(rule__Type__Group_0__0)
		{ after(grammarAccess.getTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_1()); }
		(rule__Type__Group_1__0)
		{ after(grammarAccess.getTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeBoolKeyword_1_0_0_0()); }
		'bool'
		{ after(grammarAccess.getTypeAccess().getTypeBoolKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeTristateKeyword_1_0_0_1()); }
		'tristate'
		{ after(grammarAccess.getTypeAccess().getTypeTristateKeyword_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeIntKeyword_1_0_0_2()); }
		'int'
		{ after(grammarAccess.getTypeAccess().getTypeIntKeyword_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeHexKeyword_1_0_0_3()); }
		'hex'
		{ after(grammarAccess.getTypeAccess().getTypeHexKeyword_1_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAlternatives_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeDef_boolKeyword_2_0_0_0()); }
		'def_bool'
		{ after(grammarAccess.getTypeAccess().getTypeDef_boolKeyword_2_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeDef_tristateKeyword_2_0_0_1()); }
		'def_tristate'
		{ after(grammarAccess.getTypeAccess().getTypeDef_tristateKeyword_2_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultAccess().getValueAssignment_1_0()); }
		(rule__Default__ValueAssignment_1_0)
		{ after(grammarAccess.getDefaultAccess().getValueAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefaultAccess().getTrivalAssignment_1_1()); }
		(rule__Default__TrivalAssignment_1_1)
		{ after(grammarAccess.getDefaultAccess().getTrivalAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getDefaultAccess().getHexAssignment_1_2()); }
		(rule__Default__HexAssignment_1_2)
		{ after(grammarAccess.getDefaultAccess().getHexAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getDefaultAccess().getIntAssignment_1_3()); }
		(rule__Default__IntAssignment_1_3)
		{ after(grammarAccess.getDefaultAccess().getIntAssignment_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__TrivalAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultAccess().getTrivalNKeyword_1_1_0_0()); }
		'n'
		{ after(grammarAccess.getDefaultAccess().getTrivalNKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefaultAccess().getTrivalMKeyword_1_1_0_1()); }
		'm'
		{ after(grammarAccess.getDefaultAccess().getTrivalMKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDefaultAccess().getTrivalYKeyword_1_1_0_2()); }
		'y'
		{ after(grammarAccess.getDefaultAccess().getTrivalYKeyword_1_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getGroup_1_0()); }
		(rule__Range__Group_1_0__0)
		{ after(grammarAccess.getRangeAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getGroup_1_1()); }
		(rule__Range__Group_1_1__0)
		{ after(grammarAccess.getRangeAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getIfromAssignment_1_0_0_0()); }
		(rule__Range__IfromAssignment_1_0_0_0)
		{ after(grammarAccess.getRangeAccess().getIfromAssignment_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getIconfromAssignment_1_0_0_1()); }
		(rule__Range__IconfromAssignment_1_0_0_1)
		{ after(grammarAccess.getRangeAccess().getIconfromAssignment_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getItoAssignment_1_0_1_0()); }
		(rule__Range__ItoAssignment_1_0_1_0)
		{ after(grammarAccess.getRangeAccess().getItoAssignment_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeAccess().getIconftoAssignment_1_0_1_1()); }
		(rule__Range__IconftoAssignment_1_0_1_1)
		{ after(grammarAccess.getRangeAccess().getIconftoAssignment_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryLiteralAccess().getConfslitAssignment_0()); }
		(rule__PrimaryLiteral__ConfslitAssignment_0)
		{ after(grammarAccess.getPrimaryLiteralAccess().getConfslitAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryLiteralAccess().getGroup_1()); }
		(rule__PrimaryLiteral__Group_1__0)
		{ after(grammarAccess.getPrimaryLiteralAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigLiteralAccess().getGroup_0()); }
		(rule__ConfigLiteral__Group_0__0)
		{ after(grammarAccess.getConfigLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConfigLiteralAccess().getStringAssignment_1()); }
		(rule__ConfigLiteral__StringAssignment_1)
		{ after(grammarAccess.getConfigLiteralAccess().getStringAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__Alternatives_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigLiteralAccess().getEqualsSignKeyword_0_2_0_0()); }
		'='
		{ after(grammarAccess.getConfigLiteralAccess().getEqualsSignKeyword_0_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConfigLiteralAccess().getExclamationMarkEqualsSignKeyword_0_2_0_1()); }
		'!='
		{ after(grammarAccess.getConfigLiteralAccess().getExclamationMarkEqualsSignKeyword_0_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__Alternatives_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigLiteralAccess().getYKeyword_0_2_1_0()); }
		'y'
		{ after(grammarAccess.getConfigLiteralAccess().getYKeyword_0_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConfigLiteralAccess().getMKeyword_0_2_1_1()); }
		'm'
		{ after(grammarAccess.getConfigLiteralAccess().getMKeyword_0_2_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getConfigLiteralAccess().getNKeyword_0_2_1_2()); }
		'n'
		{ after(grammarAccess.getConfigLiteralAccess().getNKeyword_0_2_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getConfigLiteralAccess().getINTTerminalRuleCall_0_2_1_3()); }
		RULE_INT
		{ after(grammarAccess.getConfigLiteralAccess().getINTTerminalRuleCall_0_2_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choice__Group__0__Impl
	rule__Choice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoiceAccess().getChoiceAssignment_0()); }
	(rule__Choice__ChoiceAssignment_0)
	{ after(grammarAccess.getChoiceAccess().getChoiceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choice__Group__1__Impl
	rule__Choice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getChoiceAccess().getConfigsAssignment_1()); }
		(rule__Choice__ConfigsAssignment_1)
		{ after(grammarAccess.getChoiceAccess().getConfigsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getChoiceAccess().getConfigsAssignment_1()); }
		(rule__Choice__ConfigsAssignment_1)*
		{ after(grammarAccess.getChoiceAccess().getConfigsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choice__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChoiceAccess().getEndchoiceKeyword_2()); }
	'endchoice'
	{ after(grammarAccess.getChoiceAccess().getEndchoiceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getSourceKeyword_0()); }
	'source'
	{ after(grammarAccess.getImportAccess().getSourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getKconfigKeyword_1()); }
	'.Kconfig'
	{ after(grammarAccess.getQualifiedNameAccess().getKconfigKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__0__Impl
	rule__Config__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getConfigKeyword_0()); }
	'config'
	{ after(grammarAccess.getConfigAccess().getConfigKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__1__Impl
	rule__Config__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getNameAssignment_1()); }
	(rule__Config__NameAssignment_1)
	{ after(grammarAccess.getConfigAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__2__Impl
	rule__Config__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getUnorderedGroup_2()); }
	(rule__Config__UnorderedGroup_2)
	{ after(grammarAccess.getConfigAccess().getUnorderedGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getKCONFIG_HELPTerminalRuleCall_3()); }
	(RULE_KCONFIG_HELP)?
	{ after(grammarAccess.getConfigAccess().getKCONFIG_HELPTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeAssignment_0_0()); }
	(rule__Type__TypeAssignment_0_0)
	{ after(grammarAccess.getTypeAccess().getTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTpromptAssignment_0_1()); }
	(rule__Type__TpromptAssignment_0_1)?
	{ after(grammarAccess.getTypeAccess().getTpromptAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__0__Impl
	rule__Type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeAssignment_1_0()); }
	(rule__Type__TypeAssignment_1_0)
	{ after(grammarAccess.getTypeAccess().getTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__1__Impl
	rule__Type__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTpromptAssignment_1_1()); }
	(rule__Type__TpromptAssignment_1_1)?
	{ after(grammarAccess.getTypeAccess().getTpromptAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGroup_1_2()); }
	(rule__Type__Group_1_2__0)?
	{ after(grammarAccess.getTypeAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1_2__0__Impl
	rule__Type__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getIfKeyword_1_2_0()); }
	'if'
	{ after(grammarAccess.getTypeAccess().getIfKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getKconfigExprAssignment_1_2_1()); }
	(rule__Type__KconfigExprAssignment_1_2_1)
	{ after(grammarAccess.getTypeAccess().getKconfigExprAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeAssignment_2_0()); }
	(rule__Type__TypeAssignment_2_0)
	{ after(grammarAccess.getTypeAccess().getTypeAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
	rule__Type__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getDefAssignment_2_1()); }
	(rule__Type__DefAssignment_2_1)
	{ after(grammarAccess.getTypeAccess().getDefAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getGroup_2_2()); }
	(rule__Type__Group_2_2__0)?
	{ after(grammarAccess.getTypeAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_2__0__Impl
	rule__Type__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getIfKeyword_2_2_0()); }
	'if'
	{ after(grammarAccess.getTypeAccess().getIfKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getKconfigExprAssignment_2_2_1()); }
	(rule__Type__KconfigExprAssignment_2_2_1)
	{ after(grammarAccess.getTypeAccess().getKconfigExprAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__0__Impl
	rule__Dependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getDependsOnKeyword_0()); }
	'depends on'
	{ after(grammarAccess.getDependencyAccess().getDependsOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getDepsAssignment_1()); }
	(rule__Dependency__DepsAssignment_1)
	{ after(grammarAccess.getDependencyAccess().getDepsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectKeyword_0()); }
	'select'
	{ after(grammarAccess.getSelectAccess().getSelectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectAssignment_1()); }
	(rule__Select__SelectAssignment_1)
	{ after(grammarAccess.getSelectAccess().getSelectAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_2()); }
	(rule__Select__Group_2__0)?
	{ after(grammarAccess.getSelectAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2__0__Impl
	rule__Select__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getIfKeyword_2_0()); }
	'if'
	{ after(grammarAccess.getSelectAccess().getIfKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getExprAssignment_2_1()); }
	(rule__Select__ExprAssignment_2_1)
	{ after(grammarAccess.getSelectAccess().getExprAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Default__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group__0__Impl
	rule__Default__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getDefaultKeyword_0()); }
	'default'
	{ after(grammarAccess.getDefaultAccess().getDefaultKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group__1__Impl
	rule__Default__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getAlternatives_1()); }
	(rule__Default__Alternatives_1)
	{ after(grammarAccess.getDefaultAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getGroup_2()); }
	(rule__Default__Group_2__0)?
	{ after(grammarAccess.getDefaultAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Default__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group_2__0__Impl
	rule__Default__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getIfKeyword_2_0()); }
	'if'
	{ after(grammarAccess.getDefaultAccess().getIfKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getKconfigExprAssignment_2_1()); }
	(rule__Default__KconfigExprAssignment_2_1)
	{ after(grammarAccess.getDefaultAccess().getKconfigExprAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Prompt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prompt__Group__0__Impl
	rule__Prompt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prompt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPromptAccess().getPromptKeyword_0()); }
	'prompt'
	{ after(grammarAccess.getPromptAccess().getPromptKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prompt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prompt__Group__1__Impl
	rule__Prompt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Prompt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPromptAccess().getValueAssignment_1()); }
	(rule__Prompt__ValueAssignment_1)
	{ after(grammarAccess.getPromptAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prompt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prompt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prompt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPromptAccess().getGroup_2()); }
	(rule__Prompt__Group_2__0)?
	{ after(grammarAccess.getPromptAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Prompt__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prompt__Group_2__0__Impl
	rule__Prompt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prompt__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPromptAccess().getIfKeyword_2_0()); }
	'if'
	{ after(grammarAccess.getPromptAccess().getIfKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prompt__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prompt__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prompt__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPromptAccess().getKconfigExprAssignment_2_1()); }
	(rule__Prompt__KconfigExprAssignment_2_1)
	{ after(grammarAccess.getPromptAccess().getKconfigExprAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getRangeKeyword_0()); }
	'range'
	{ after(grammarAccess.getRangeAccess().getRangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__1__Impl
	rule__Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getAlternatives_1()); }
	(rule__Range__Alternatives_1)
	{ after(grammarAccess.getRangeAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getGroup_2()); }
	(rule__Range__Group_2__0)?
	{ after(grammarAccess.getRangeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group_1_0__0__Impl
	rule__Range__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getAlternatives_1_0_0()); }
	(rule__Range__Alternatives_1_0_0)
	{ after(grammarAccess.getRangeAccess().getAlternatives_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getAlternatives_1_0_1()); }
	(rule__Range__Alternatives_1_0_1)
	{ after(grammarAccess.getRangeAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group_1_1__0__Impl
	rule__Range__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getHfromAssignment_1_1_0()); }
	(rule__Range__HfromAssignment_1_1_0)
	{ after(grammarAccess.getRangeAccess().getHfromAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getHtoAssignment_1_1_1()); }
	(rule__Range__HtoAssignment_1_1_1)
	{ after(grammarAccess.getRangeAccess().getHtoAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group_2__0__Impl
	rule__Range__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getIfKeyword_2_0()); }
	'if'
	{ after(grammarAccess.getRangeAccess().getIfKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getKconfigExprAssignment_2_1()); }
	(rule__Range__KconfigExprAssignment_2_1)
	{ after(grammarAccess.getRangeAccess().getKconfigExprAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group__0__Impl
	rule__Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getNeqLiteralParserRuleCall_0()); }
	ruleNeqLiteral
	{ after(grammarAccess.getExprAccess().getNeqLiteralParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getGroup_1()); }
	(rule__Expr__Group_1__0)*
	{ after(grammarAccess.getExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_1__0__Impl
	rule__Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExprAccess().getExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_1__1__Impl
	rule__Expr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getExprAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getRightAssignment_1_2()); }
	(rule__Expr__RightAssignment_1_2)
	{ after(grammarAccess.getExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeqLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeqLiteral__Group__0__Impl
	rule__NeqLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeqLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeqLiteralAccess().getSecondaryLiteralParserRuleCall_0()); }
	ruleSecondaryLiteral
	{ after(grammarAccess.getNeqLiteralAccess().getSecondaryLiteralParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeqLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeqLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeqLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeqLiteralAccess().getGroup_1()); }
	(rule__NeqLiteral__Group_1__0)*
	{ after(grammarAccess.getNeqLiteralAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NeqLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeqLiteral__Group_1__0__Impl
	rule__NeqLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NeqLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeqLiteralAccess().getNeqLiteralLeftAction_1_0()); }
	()
	{ after(grammarAccess.getNeqLiteralAccess().getNeqLiteralLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeqLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeqLiteral__Group_1__1__Impl
	rule__NeqLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NeqLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeqLiteralAccess().getExclamationMarkEqualsSignKeyword_1_1()); }
	'!='
	{ after(grammarAccess.getNeqLiteralAccess().getExclamationMarkEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeqLiteral__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NeqLiteral__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NeqLiteral__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNeqLiteralAccess().getRightAssignment_1_2()); }
	(rule__NeqLiteral__RightAssignment_1_2)
	{ after(grammarAccess.getNeqLiteralAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndLiteral__Group__0__Impl
	rule__AndLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndLiteralAccess().getOrLiteralParserRuleCall_0()); }
	ruleOrLiteral
	{ after(grammarAccess.getAndLiteralAccess().getOrLiteralParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndLiteralAccess().getGroup_1()); }
	(rule__AndLiteral__Group_1__0)*
	{ after(grammarAccess.getAndLiteralAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndLiteral__Group_1__0__Impl
	rule__AndLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndLiteralAccess().getAndLiteralLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndLiteralAccess().getAndLiteralLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndLiteral__Group_1__1__Impl
	rule__AndLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndLiteralAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getAndLiteralAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndLiteral__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndLiteral__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndLiteral__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndLiteralAccess().getRightAssignment_1_2()); }
	(rule__AndLiteral__RightAssignment_1_2)
	{ after(grammarAccess.getAndLiteralAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrLiteral__Group__0__Impl
	rule__OrLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrLiteralAccess().getPrimaryLiteralParserRuleCall_0()); }
	rulePrimaryLiteral
	{ after(grammarAccess.getOrLiteralAccess().getPrimaryLiteralParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrLiteralAccess().getGroup_1()); }
	(rule__OrLiteral__Group_1__0)*
	{ after(grammarAccess.getOrLiteralAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrLiteral__Group_1__0__Impl
	rule__OrLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrLiteralAccess().getOrLiteralLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrLiteralAccess().getOrLiteralLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrLiteral__Group_1__1__Impl
	rule__OrLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrLiteralAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getOrLiteralAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrLiteral__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrLiteral__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrLiteral__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrLiteralAccess().getRightAssignment_1_2()); }
	(rule__OrLiteral__RightAssignment_1_2)
	{ after(grammarAccess.getOrLiteralAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryLiteral__Group_1__0__Impl
	rule__PrimaryLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryLiteralAccess().getExclamationMarkKeyword_1_0()); }
	('!')?
	{ after(grammarAccess.getPrimaryLiteralAccess().getExclamationMarkKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryLiteral__Group_1__1__Impl
	rule__PrimaryLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryLiteralAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getPrimaryLiteralAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryLiteral__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryLiteral__Group_1__2__Impl
	rule__PrimaryLiteral__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryLiteral__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryLiteralAccess().getExprParserRuleCall_1_2()); }
	ruleExpr
	{ after(grammarAccess.getPrimaryLiteralAccess().getExprParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryLiteral__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryLiteral__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryLiteral__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryLiteralAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getPrimaryLiteralAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigLiteral__Group_0__0__Impl
	rule__ConfigLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigLiteralAccess().getExclamationMarkKeyword_0_0()); }
	('!')?
	{ after(grammarAccess.getConfigLiteralAccess().getExclamationMarkKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigLiteral__Group_0__1__Impl
	rule__ConfigLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigLiteralAccess().getConfAssignment_0_1()); }
	(rule__ConfigLiteral__ConfAssignment_0_1)
	{ after(grammarAccess.getConfigLiteralAccess().getConfAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigLiteral__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigLiteralAccess().getGroup_0_2()); }
	(rule__ConfigLiteral__Group_0_2__0)?
	{ after(grammarAccess.getConfigLiteralAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigLiteral__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigLiteral__Group_0_2__0__Impl
	rule__ConfigLiteral__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigLiteralAccess().getAlternatives_0_2_0()); }
	(rule__ConfigLiteral__Alternatives_0_2_0)
	{ after(grammarAccess.getConfigLiteralAccess().getAlternatives_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigLiteral__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigLiteralAccess().getAlternatives_0_2_1()); }
	(rule__ConfigLiteral__Alternatives_0_2_1)
	{ after(grammarAccess.getConfigLiteralAccess().getAlternatives_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIGNED_INT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIGNED_INT__Group__0__Impl
	rule__SIGNED_INT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNED_INT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIGNED_INTAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getSIGNED_INTAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNED_INT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIGNED_INT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNED_INT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIGNED_INTAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getSIGNED_INTAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Config__UnorderedGroup_2
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getConfigAccess().getUnorderedGroup_2());
	}
:
	rule__Config__UnorderedGroup_2__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getConfigAccess().getUnorderedGroup_2())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getConfigAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__Config__UnorderedGroup_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getConfigAccess().getTypeAssignment_2_0()); }
					(rule__Config__TypeAssignment_2_0)
					{ after(grammarAccess.getConfigAccess().getTypeAssignment_2_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getConfigAccess().getPromptsAssignment_2_1()); }
					(rule__Config__PromptsAssignment_2_1)
					{ after(grammarAccess.getConfigAccess().getPromptsAssignment_2_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 2);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getConfigAccess().getRangesAssignment_2_2()); }
						(rule__Config__RangesAssignment_2_2)
						{ after(grammarAccess.getConfigAccess().getRangesAssignment_2_2()); }
					)
					(
						{ before(grammarAccess.getConfigAccess().getRangesAssignment_2_2()); }
						((rule__Config__RangesAssignment_2_2)=>rule__Config__RangesAssignment_2_2)*
						{ after(grammarAccess.getConfigAccess().getRangesAssignment_2_2()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 3);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getConfigAccess().getDependenciesAssignment_2_3()); }
						(rule__Config__DependenciesAssignment_2_3)
						{ after(grammarAccess.getConfigAccess().getDependenciesAssignment_2_3()); }
					)
					(
						{ before(grammarAccess.getConfigAccess().getDependenciesAssignment_2_3()); }
						((rule__Config__DependenciesAssignment_2_3)=>rule__Config__DependenciesAssignment_2_3)*
						{ after(grammarAccess.getConfigAccess().getDependenciesAssignment_2_3()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 4);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getConfigAccess().getSelectsAssignment_2_4()); }
						(rule__Config__SelectsAssignment_2_4)
						{ after(grammarAccess.getConfigAccess().getSelectsAssignment_2_4()); }
					)
					(
						{ before(grammarAccess.getConfigAccess().getSelectsAssignment_2_4()); }
						((rule__Config__SelectsAssignment_2_4)=>rule__Config__SelectsAssignment_2_4)*
						{ after(grammarAccess.getConfigAccess().getSelectsAssignment_2_4()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getConfigAccess().getUnorderedGroup_2(), 5);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getConfigAccess().getDefaultsAssignment_2_5()); }
						(rule__Config__DefaultsAssignment_2_5)
						{ after(grammarAccess.getConfigAccess().getDefaultsAssignment_2_5()); }
					)
					(
						{ before(grammarAccess.getConfigAccess().getDefaultsAssignment_2_5()); }
						((rule__Config__DefaultsAssignment_2_5)=>rule__Config__DefaultsAssignment_2_5)*
						{ after(grammarAccess.getConfigAccess().getDefaultsAssignment_2_5()); }
					)
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConfigAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}

rule__Config__UnorderedGroup_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__UnorderedGroup_2__Impl
	rule__Config__UnorderedGroup_2__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__UnorderedGroup_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__UnorderedGroup_2__Impl
	rule__Config__UnorderedGroup_2__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__UnorderedGroup_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__UnorderedGroup_2__Impl
	rule__Config__UnorderedGroup_2__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__UnorderedGroup_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__UnorderedGroup_2__Impl
	rule__Config__UnorderedGroup_2__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__UnorderedGroup_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__UnorderedGroup_2__Impl
	rule__Config__UnorderedGroup_2__5?
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__UnorderedGroup_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__UnorderedGroup_2__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ChoicesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getChoicesChoiceParserRuleCall_0_0()); }
		ruleChoice
		{ after(grammarAccess.getModelAccess().getChoicesChoiceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SourcesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSourcesImportParserRuleCall_1_0()); }
		ruleImport
		{ after(grammarAccess.getModelAccess().getSourcesImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ConfigsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConfigsConfigParserRuleCall_2_0()); }
		ruleConfig
		{ after(grammarAccess.getModelAccess().getConfigsConfigParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__ChoiceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChoiceAccess().getChoiceChoiceKeyword_0_0()); }
		(
			{ before(grammarAccess.getChoiceAccess().getChoiceChoiceKeyword_0_0()); }
			'choice'
			{ after(grammarAccess.getChoiceAccess().getChoiceChoiceKeyword_0_0()); }
		)
		{ after(grammarAccess.getChoiceAccess().getChoiceChoiceKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__ConfigsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChoiceAccess().getConfigsConfigParserRuleCall_1_0()); }
		ruleConfig
		{ after(grammarAccess.getChoiceAccess().getConfigsConfigParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__TypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getTypeTypeParserRuleCall_2_0_0()); }
		ruleType
		{ after(grammarAccess.getConfigAccess().getTypeTypeParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__PromptsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getPromptsPromptParserRuleCall_2_1_0()); }
		rulePrompt
		{ after(grammarAccess.getConfigAccess().getPromptsPromptParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__RangesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getRangesRangeParserRuleCall_2_2_0()); }
		ruleRange
		{ after(grammarAccess.getConfigAccess().getRangesRangeParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__DependenciesAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getDependenciesDependencyParserRuleCall_2_3_0()); }
		ruleDependency
		{ after(grammarAccess.getConfigAccess().getDependenciesDependencyParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__SelectsAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getSelectsSelectParserRuleCall_2_4_0()); }
		ruleSelect
		{ after(grammarAccess.getConfigAccess().getSelectsSelectParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__DefaultsAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getDefaultsDefaultParserRuleCall_2_5_0()); }
		ruleDefault
		{ after(grammarAccess.getConfigAccess().getDefaultsDefaultParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeStringKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getTypeStringKeyword_0_0_0()); }
			'string'
			{ after(grammarAccess.getTypeAccess().getTypeStringKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getTypeStringKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TpromptAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTpromptSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTypeAccess().getTpromptSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeAlternatives_1_0_0()); }
		(rule__Type__TypeAlternatives_1_0_0)
		{ after(grammarAccess.getTypeAccess().getTypeAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TpromptAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTpromptSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTypeAccess().getTpromptSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__KconfigExprAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getKconfigExprExprParserRuleCall_1_2_1_0()); }
		ruleExpr
		{ after(grammarAccess.getTypeAccess().getKconfigExprExprParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeAlternatives_2_0_0()); }
		(rule__Type__TypeAlternatives_2_0_0)
		{ after(grammarAccess.getTypeAccess().getTypeAlternatives_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DefAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getDefExprParserRuleCall_2_1_0()); }
		ruleExpr
		{ after(grammarAccess.getTypeAccess().getDefExprParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__KconfigExprAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getKconfigExprExprParserRuleCall_2_2_1_0()); }
		ruleExpr
		{ after(grammarAccess.getTypeAccess().getKconfigExprExprParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__DepsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getDepsExprParserRuleCall_1_0()); }
		ruleExpr
		{ after(grammarAccess.getDependencyAccess().getDepsExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__SelectAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getSelectConfigCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSelectAccess().getSelectConfigIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSelectAccess().getSelectConfigIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSelectAccess().getSelectConfigCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ExprAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getExprExprParserRuleCall_2_1_0()); }
		ruleExpr
		{ after(grammarAccess.getSelectAccess().getExprExprParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__ValueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultAccess().getValueExprParserRuleCall_1_0_0()); }
		ruleExpr
		{ after(grammarAccess.getDefaultAccess().getValueExprParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__TrivalAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultAccess().getTrivalAlternatives_1_1_0()); }
		(rule__Default__TrivalAlternatives_1_1_0)
		{ after(grammarAccess.getDefaultAccess().getTrivalAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__HexAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultAccess().getHexHEX_TERMINALTerminalRuleCall_1_2_0()); }
		RULE_HEX_TERMINAL
		{ after(grammarAccess.getDefaultAccess().getHexHEX_TERMINALTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__IntAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultAccess().getIntINTTerminalRuleCall_1_3_0()); }
		RULE_INT
		{ after(grammarAccess.getDefaultAccess().getIntINTTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__KconfigExprAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultAccess().getKconfigExprExprParserRuleCall_2_1_0()); }
		ruleExpr
		{ after(grammarAccess.getDefaultAccess().getKconfigExprExprParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prompt__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPromptAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPromptAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prompt__KconfigExprAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPromptAccess().getKconfigExprExprParserRuleCall_2_1_0()); }
		ruleExpr
		{ after(grammarAccess.getPromptAccess().getKconfigExprExprParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__IfromAssignment_1_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getIfromSIGNED_INTParserRuleCall_1_0_0_0_0()); }
		ruleSIGNED_INT
		{ after(grammarAccess.getRangeAccess().getIfromSIGNED_INTParserRuleCall_1_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__IconfromAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getIconfromConfigCrossReference_1_0_0_1_0()); }
		(
			{ before(grammarAccess.getRangeAccess().getIconfromConfigIDTerminalRuleCall_1_0_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRangeAccess().getIconfromConfigIDTerminalRuleCall_1_0_0_1_0_1()); }
		)
		{ after(grammarAccess.getRangeAccess().getIconfromConfigCrossReference_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__ItoAssignment_1_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getItoSIGNED_INTParserRuleCall_1_0_1_0_0()); }
		ruleSIGNED_INT
		{ after(grammarAccess.getRangeAccess().getItoSIGNED_INTParserRuleCall_1_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__IconftoAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getIconftoConfigCrossReference_1_0_1_1_0()); }
		(
			{ before(grammarAccess.getRangeAccess().getIconftoConfigIDTerminalRuleCall_1_0_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRangeAccess().getIconftoConfigIDTerminalRuleCall_1_0_1_1_0_1()); }
		)
		{ after(grammarAccess.getRangeAccess().getIconftoConfigCrossReference_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__HfromAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getHfromHEX_TERMINALTerminalRuleCall_1_1_0_0()); }
		RULE_HEX_TERMINAL
		{ after(grammarAccess.getRangeAccess().getHfromHEX_TERMINALTerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__HtoAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getHtoHEX_TERMINALTerminalRuleCall_1_1_1_0()); }
		RULE_HEX_TERMINAL
		{ after(grammarAccess.getRangeAccess().getHtoHEX_TERMINALTerminalRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__KconfigExprAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getKconfigExprExprParserRuleCall_2_1_0()); }
		ruleExpr
		{ after(grammarAccess.getRangeAccess().getKconfigExprExprParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getRightNeqLiteralParserRuleCall_1_2_0()); }
		ruleNeqLiteral
		{ after(grammarAccess.getExprAccess().getRightNeqLiteralParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NeqLiteral__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNeqLiteralAccess().getRightSecondaryLiteralParserRuleCall_1_2_0()); }
		ruleSecondaryLiteral
		{ after(grammarAccess.getNeqLiteralAccess().getRightSecondaryLiteralParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndLiteral__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndLiteralAccess().getRightOrLiteralParserRuleCall_1_2_0()); }
		ruleOrLiteral
		{ after(grammarAccess.getAndLiteralAccess().getRightOrLiteralParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrLiteral__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrLiteralAccess().getRightPrimaryLiteralParserRuleCall_1_2_0()); }
		rulePrimaryLiteral
		{ after(grammarAccess.getOrLiteralAccess().getRightPrimaryLiteralParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryLiteral__ConfslitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryLiteralAccess().getConfslitConfigLiteralParserRuleCall_0_0()); }
		ruleConfigLiteral
		{ after(grammarAccess.getPrimaryLiteralAccess().getConfslitConfigLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__ConfAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigLiteralAccess().getConfConfigCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getConfigLiteralAccess().getConfConfigIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConfigLiteralAccess().getConfConfigIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getConfigLiteralAccess().getConfConfigCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigLiteral__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigLiteralAccess().getStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getConfigLiteralAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : ('1'..'9' '0'..'9' '0'..'9' '0'..'9' '0'..'9' ('A'..'Z'|'a'..'z'|'_') ('a'..'z'|'0'..'9'|'A'..'Z'|'_')*|'1'..'9' '0'..'9' '0'..'9' '0'..'9' ('A'..'Z'|'a'..'z'|'_') ('a'..'z'|'0'..'9'|'A'..'Z'|'_')*|'0'..'9' '0'..'9' '0'..'9' ('A'..'Z'|'a'..'z'|'_') ('a'..'z'|'0'..'9'|'A'..'Z'|'_')*|'1'..'9' '0'..'9' ('A'..'Z'|'a'..'z'|'_') ('a'..'z'|'0'..'9'|'A'..'Z'|'_')*|'1'..'9' ('A'..'Z'|'a'..'z'|'_') ('a'..'z'|'0'..'9'|'A'..'Z'|'_')*|('A'..'Z'|'a'..'z') ('a'..'z'|'0'..'9'|'A'..'Z'|'_')*);

RULE_HEX_TERMINAL : '0x' ('0'..'9'|'a'..'f'|'A'..'F')*;

RULE_KCONFIG_HELP : '---help---' ( options {greedy=false;} : . )*'\n\n';

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
